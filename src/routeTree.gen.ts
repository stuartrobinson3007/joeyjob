/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as BookingFormRouteImport } from './routes/_booking-form'
import { Route as AllPagesRouteImport } from './routes/_all-pages'
import { Route as AllPagesTermsRouteImport } from './routes/_all-pages/terms'
import { Route as AllPagesAuthenticatedRouteImport } from './routes/_all-pages/_authenticated'
import { Route as BookingFormEmbedFormIdRouteImport } from './routes/_booking-form/embed.$formId'
import { Route as AllPagesSuperadminSigninRouteImport } from './routes/_all-pages/superadmin/signin'
import { Route as AllPagesOauth2AccessCodeRouteImport } from './routes/_all-pages/oauth2/accessCode'
import { Route as AllPagesInviteInvitationIdRouteImport } from './routes/_all-pages/invite.$invitationId'
import { Route as AllPagesAuthUpdateConnectionRouteImport } from './routes/_all-pages/auth/update-connection'
import { Route as AllPagesAuthSigninRouteImport } from './routes/_all-pages/auth/signin'
import { Route as AllPagesAdminSimproConfigRouteImport } from './routes/_all-pages/admin/simpro-config'
import { Route as AllPagesAuthenticatedSuperadminRouteImport } from './routes/_all-pages/_authenticated/superadmin'
import { Route as AllPagesAuthenticatedSelectOrganizationRouteImport } from './routes/_all-pages/_authenticated/select-organization'
import { Route as AllPagesAuthenticatedProfileRouteImport } from './routes/_all-pages/_authenticated/profile'
import { Route as AllPagesAuthenticatedOnboardingRouteImport } from './routes/_all-pages/_authenticated/onboarding'
import { Route as AllPagesAuthenticatedSuperadminIndexRouteImport } from './routes/_all-pages/_authenticated/superadmin/index'
import { Route as AllPagesAuthenticatedOrgRequiredIndexRouteImport } from './routes/_all-pages/_authenticated/_org-required/index'
import { Route as BookingFormFOrgSlugFormSlugRouteImport } from './routes/_booking-form/f.$orgSlug.$formSlug'
import { Route as AllPagesAuthenticatedSuperadminWorkspacesRouteImport } from './routes/_all-pages/_authenticated/superadmin/workspaces'
import { Route as AllPagesAuthenticatedSuperadminUsersRouteImport } from './routes/_all-pages/_authenticated/superadmin/users'
import { Route as AllPagesAuthenticatedCompanySetupSelectCompanyRouteImport } from './routes/_all-pages/_authenticated/company-setup/select-company'
import { Route as AllPagesAuthenticatedCompanySetupEmployeesRouteImport } from './routes/_all-pages/_authenticated/company-setup/employees'
import { Route as AllPagesAuthenticatedCompanySetupCompanyInfoRouteImport } from './routes/_all-pages/_authenticated/company-setup/company-info'
import { Route as AllPagesAuthenticatedOrgRequiredTeamRouteImport } from './routes/_all-pages/_authenticated/_org-required/team'
import { Route as AllPagesAuthenticatedOrgRequiredSettingsRouteImport } from './routes/_all-pages/_authenticated/_org-required/settings'
import { Route as AllPagesAuthenticatedOrgRequiredPaymentErrorRouteImport } from './routes/_all-pages/_authenticated/_org-required/payment-error'
import { Route as AllPagesAuthenticatedOrgRequiredChoosePlanRouteImport } from './routes/_all-pages/_authenticated/_org-required/choose-plan'
import { Route as AllPagesAuthenticatedOrgRequiredBookingsRouteImport } from './routes/_all-pages/_authenticated/_org-required/bookings'
import { Route as AllPagesAuthenticatedOrgRequiredBillingRouteImport } from './routes/_all-pages/_authenticated/_org-required/billing'
import { Route as AllPagesAuthenticatedOrgRequiredFormFormIdEditRouteImport } from './routes/_all-pages/_authenticated/_org-required/form.$formId.edit'
import { ServerRoute as ApiHealthServerRouteImport } from './routes/api/health'
import { ServerRoute as ApiEmployeesIndexServerRouteImport } from './routes/api/employees/index'
import { ServerRoute as ApiStripeWebhookServerRouteImport } from './routes/api/stripe/webhook'
import { ServerRoute as ApiEmployeesSyncServerRouteImport } from './routes/api/employees/sync'
import { ServerRoute as ApiDebugSimproEmployeesServerRouteImport } from './routes/api/debug/simpro-employees'
import { ServerRoute as ApiDebugServiceEmployeesServerRouteImport } from './routes/api/debug/service-employees'
import { ServerRoute as ApiBookingsSubmitServerRouteImport } from './routes/api/bookings/submit'
import { ServerRoute as ApiAvatarsUploadServerRouteImport } from './routes/api/avatars/upload'
import { ServerRoute as ApiAvatarsDeleteServerRouteImport } from './routes/api/avatars/delete'
import { ServerRoute as ApiAvatarsSplatServerRouteImport } from './routes/api/avatars/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'
import { ServerRoute as ApiServicesServiceIdEmployeesServerRouteImport } from './routes/api/services/$serviceId/employees'
import { ServerRoute as ApiPublicServicesServiceIdAvailabilityServerRouteImport } from './routes/api/public/services/$serviceId/availability'

const rootServerRouteImport = createServerRootRoute()

const BookingFormRoute = BookingFormRouteImport.update({
  id: '/_booking-form',
  getParentRoute: () => rootRouteImport,
} as any)
const AllPagesRoute = AllPagesRouteImport.update({
  id: '/_all-pages',
  getParentRoute: () => rootRouteImport,
} as any)
const AllPagesTermsRoute = AllPagesTermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => AllPagesRoute,
} as any)
const AllPagesAuthenticatedRoute = AllPagesAuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => AllPagesRoute,
} as any)
const BookingFormEmbedFormIdRoute = BookingFormEmbedFormIdRouteImport.update({
  id: '/embed/$formId',
  path: '/embed/$formId',
  getParentRoute: () => BookingFormRoute,
} as any)
const AllPagesSuperadminSigninRoute =
  AllPagesSuperadminSigninRouteImport.update({
    id: '/superadmin/signin',
    path: '/superadmin/signin',
    getParentRoute: () => AllPagesRoute,
  } as any)
const AllPagesOauth2AccessCodeRoute =
  AllPagesOauth2AccessCodeRouteImport.update({
    id: '/oauth2/accessCode',
    path: '/oauth2/accessCode',
    getParentRoute: () => AllPagesRoute,
  } as any)
const AllPagesInviteInvitationIdRoute =
  AllPagesInviteInvitationIdRouteImport.update({
    id: '/invite/$invitationId',
    path: '/invite/$invitationId',
    getParentRoute: () => AllPagesRoute,
  } as any)
const AllPagesAuthUpdateConnectionRoute =
  AllPagesAuthUpdateConnectionRouteImport.update({
    id: '/auth/update-connection',
    path: '/auth/update-connection',
    getParentRoute: () => AllPagesRoute,
  } as any)
const AllPagesAuthSigninRoute = AllPagesAuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => AllPagesRoute,
} as any)
const AllPagesAdminSimproConfigRoute =
  AllPagesAdminSimproConfigRouteImport.update({
    id: '/admin/simpro-config',
    path: '/admin/simpro-config',
    getParentRoute: () => AllPagesRoute,
  } as any)
const AllPagesAuthenticatedSuperadminRoute =
  AllPagesAuthenticatedSuperadminRouteImport.update({
    id: '/superadmin',
    path: '/superadmin',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedSelectOrganizationRoute =
  AllPagesAuthenticatedSelectOrganizationRouteImport.update({
    id: '/select-organization',
    path: '/select-organization',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedProfileRoute =
  AllPagesAuthenticatedProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOnboardingRoute =
  AllPagesAuthenticatedOnboardingRouteImport.update({
    id: '/onboarding',
    path: '/onboarding',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedSuperadminIndexRoute =
  AllPagesAuthenticatedSuperadminIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AllPagesAuthenticatedSuperadminRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredIndexRoute =
  AllPagesAuthenticatedOrgRequiredIndexRouteImport.update({
    id: '/_org-required/',
    path: '/',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const BookingFormFOrgSlugFormSlugRoute =
  BookingFormFOrgSlugFormSlugRouteImport.update({
    id: '/f/$orgSlug/$formSlug',
    path: '/f/$orgSlug/$formSlug',
    getParentRoute: () => BookingFormRoute,
  } as any)
const AllPagesAuthenticatedSuperadminWorkspacesRoute =
  AllPagesAuthenticatedSuperadminWorkspacesRouteImport.update({
    id: '/workspaces',
    path: '/workspaces',
    getParentRoute: () => AllPagesAuthenticatedSuperadminRoute,
  } as any)
const AllPagesAuthenticatedSuperadminUsersRoute =
  AllPagesAuthenticatedSuperadminUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => AllPagesAuthenticatedSuperadminRoute,
  } as any)
const AllPagesAuthenticatedCompanySetupSelectCompanyRoute =
  AllPagesAuthenticatedCompanySetupSelectCompanyRouteImport.update({
    id: '/company-setup/select-company',
    path: '/company-setup/select-company',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedCompanySetupEmployeesRoute =
  AllPagesAuthenticatedCompanySetupEmployeesRouteImport.update({
    id: '/company-setup/employees',
    path: '/company-setup/employees',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedCompanySetupCompanyInfoRoute =
  AllPagesAuthenticatedCompanySetupCompanyInfoRouteImport.update({
    id: '/company-setup/company-info',
    path: '/company-setup/company-info',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredTeamRoute =
  AllPagesAuthenticatedOrgRequiredTeamRouteImport.update({
    id: '/_org-required/team',
    path: '/team',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredSettingsRoute =
  AllPagesAuthenticatedOrgRequiredSettingsRouteImport.update({
    id: '/_org-required/settings',
    path: '/settings',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredPaymentErrorRoute =
  AllPagesAuthenticatedOrgRequiredPaymentErrorRouteImport.update({
    id: '/_org-required/payment-error',
    path: '/payment-error',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredChoosePlanRoute =
  AllPagesAuthenticatedOrgRequiredChoosePlanRouteImport.update({
    id: '/_org-required/choose-plan',
    path: '/choose-plan',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredBookingsRoute =
  AllPagesAuthenticatedOrgRequiredBookingsRouteImport.update({
    id: '/_org-required/bookings',
    path: '/bookings',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredBillingRoute =
  AllPagesAuthenticatedOrgRequiredBillingRouteImport.update({
    id: '/_org-required/billing',
    path: '/billing',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute =
  AllPagesAuthenticatedOrgRequiredFormFormIdEditRouteImport.update({
    id: '/_org-required/form/$formId/edit',
    path: '/form/$formId/edit',
    getParentRoute: () => AllPagesAuthenticatedRoute,
  } as any)
const ApiHealthServerRoute = ApiHealthServerRouteImport.update({
  id: '/api/health',
  path: '/api/health',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmployeesIndexServerRoute = ApiEmployeesIndexServerRouteImport.update({
  id: '/api/employees/',
  path: '/api/employees/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStripeWebhookServerRoute = ApiStripeWebhookServerRouteImport.update({
  id: '/api/stripe/webhook',
  path: '/api/stripe/webhook',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEmployeesSyncServerRoute = ApiEmployeesSyncServerRouteImport.update({
  id: '/api/employees/sync',
  path: '/api/employees/sync',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDebugSimproEmployeesServerRoute =
  ApiDebugSimproEmployeesServerRouteImport.update({
    id: '/api/debug/simpro-employees',
    path: '/api/debug/simpro-employees',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiDebugServiceEmployeesServerRoute =
  ApiDebugServiceEmployeesServerRouteImport.update({
    id: '/api/debug/service-employees',
    path: '/api/debug/service-employees',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiBookingsSubmitServerRoute = ApiBookingsSubmitServerRouteImport.update({
  id: '/api/bookings/submit',
  path: '/api/bookings/submit',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsUploadServerRoute = ApiAvatarsUploadServerRouteImport.update({
  id: '/api/avatars/upload',
  path: '/api/avatars/upload',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsDeleteServerRoute = ApiAvatarsDeleteServerRouteImport.update({
  id: '/api/avatars/delete',
  path: '/api/avatars/delete',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsSplatServerRoute = ApiAvatarsSplatServerRouteImport.update({
  id: '/api/avatars/$',
  path: '/api/avatars/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiServicesServiceIdEmployeesServerRoute =
  ApiServicesServiceIdEmployeesServerRouteImport.update({
    id: '/api/services/$serviceId/employees',
    path: '/api/services/$serviceId/employees',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiPublicServicesServiceIdAvailabilityServerRoute =
  ApiPublicServicesServiceIdAvailabilityServerRouteImport.update({
    id: '/api/public/services/$serviceId/availability',
    path: '/api/public/services/$serviceId/availability',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/terms': typeof AllPagesTermsRoute
  '/onboarding': typeof AllPagesAuthenticatedOnboardingRoute
  '/profile': typeof AllPagesAuthenticatedProfileRoute
  '/select-organization': typeof AllPagesAuthenticatedSelectOrganizationRoute
  '/superadmin': typeof AllPagesAuthenticatedSuperadminRouteWithChildren
  '/admin/simpro-config': typeof AllPagesAdminSimproConfigRoute
  '/auth/signin': typeof AllPagesAuthSigninRoute
  '/auth/update-connection': typeof AllPagesAuthUpdateConnectionRoute
  '/invite/$invitationId': typeof AllPagesInviteInvitationIdRoute
  '/oauth2/accessCode': typeof AllPagesOauth2AccessCodeRoute
  '/superadmin/signin': typeof AllPagesSuperadminSigninRoute
  '/embed/$formId': typeof BookingFormEmbedFormIdRoute
  '/billing': typeof AllPagesAuthenticatedOrgRequiredBillingRoute
  '/bookings': typeof AllPagesAuthenticatedOrgRequiredBookingsRoute
  '/choose-plan': typeof AllPagesAuthenticatedOrgRequiredChoosePlanRoute
  '/payment-error': typeof AllPagesAuthenticatedOrgRequiredPaymentErrorRoute
  '/settings': typeof AllPagesAuthenticatedOrgRequiredSettingsRoute
  '/team': typeof AllPagesAuthenticatedOrgRequiredTeamRoute
  '/company-setup/company-info': typeof AllPagesAuthenticatedCompanySetupCompanyInfoRoute
  '/company-setup/employees': typeof AllPagesAuthenticatedCompanySetupEmployeesRoute
  '/company-setup/select-company': typeof AllPagesAuthenticatedCompanySetupSelectCompanyRoute
  '/superadmin/users': typeof AllPagesAuthenticatedSuperadminUsersRoute
  '/superadmin/workspaces': typeof AllPagesAuthenticatedSuperadminWorkspacesRoute
  '/f/$orgSlug/$formSlug': typeof BookingFormFOrgSlugFormSlugRoute
  '/': typeof AllPagesAuthenticatedOrgRequiredIndexRoute
  '/superadmin/': typeof AllPagesAuthenticatedSuperadminIndexRoute
  '/form/$formId/edit': typeof AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute
}
export interface FileRoutesByTo {
  '/terms': typeof AllPagesTermsRoute
  '/onboarding': typeof AllPagesAuthenticatedOnboardingRoute
  '/profile': typeof AllPagesAuthenticatedProfileRoute
  '/select-organization': typeof AllPagesAuthenticatedSelectOrganizationRoute
  '/admin/simpro-config': typeof AllPagesAdminSimproConfigRoute
  '/auth/signin': typeof AllPagesAuthSigninRoute
  '/auth/update-connection': typeof AllPagesAuthUpdateConnectionRoute
  '/invite/$invitationId': typeof AllPagesInviteInvitationIdRoute
  '/oauth2/accessCode': typeof AllPagesOauth2AccessCodeRoute
  '/superadmin/signin': typeof AllPagesSuperadminSigninRoute
  '/embed/$formId': typeof BookingFormEmbedFormIdRoute
  '/billing': typeof AllPagesAuthenticatedOrgRequiredBillingRoute
  '/bookings': typeof AllPagesAuthenticatedOrgRequiredBookingsRoute
  '/choose-plan': typeof AllPagesAuthenticatedOrgRequiredChoosePlanRoute
  '/payment-error': typeof AllPagesAuthenticatedOrgRequiredPaymentErrorRoute
  '/settings': typeof AllPagesAuthenticatedOrgRequiredSettingsRoute
  '/team': typeof AllPagesAuthenticatedOrgRequiredTeamRoute
  '/company-setup/company-info': typeof AllPagesAuthenticatedCompanySetupCompanyInfoRoute
  '/company-setup/employees': typeof AllPagesAuthenticatedCompanySetupEmployeesRoute
  '/company-setup/select-company': typeof AllPagesAuthenticatedCompanySetupSelectCompanyRoute
  '/superadmin/users': typeof AllPagesAuthenticatedSuperadminUsersRoute
  '/superadmin/workspaces': typeof AllPagesAuthenticatedSuperadminWorkspacesRoute
  '/f/$orgSlug/$formSlug': typeof BookingFormFOrgSlugFormSlugRoute
  '/': typeof AllPagesAuthenticatedOrgRequiredIndexRoute
  '/superadmin': typeof AllPagesAuthenticatedSuperadminIndexRoute
  '/form/$formId/edit': typeof AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_all-pages': typeof AllPagesRouteWithChildren
  '/_booking-form': typeof BookingFormRouteWithChildren
  '/_all-pages/_authenticated': typeof AllPagesAuthenticatedRouteWithChildren
  '/_all-pages/terms': typeof AllPagesTermsRoute
  '/_all-pages/_authenticated/onboarding': typeof AllPagesAuthenticatedOnboardingRoute
  '/_all-pages/_authenticated/profile': typeof AllPagesAuthenticatedProfileRoute
  '/_all-pages/_authenticated/select-organization': typeof AllPagesAuthenticatedSelectOrganizationRoute
  '/_all-pages/_authenticated/superadmin': typeof AllPagesAuthenticatedSuperadminRouteWithChildren
  '/_all-pages/admin/simpro-config': typeof AllPagesAdminSimproConfigRoute
  '/_all-pages/auth/signin': typeof AllPagesAuthSigninRoute
  '/_all-pages/auth/update-connection': typeof AllPagesAuthUpdateConnectionRoute
  '/_all-pages/invite/$invitationId': typeof AllPagesInviteInvitationIdRoute
  '/_all-pages/oauth2/accessCode': typeof AllPagesOauth2AccessCodeRoute
  '/_all-pages/superadmin/signin': typeof AllPagesSuperadminSigninRoute
  '/_booking-form/embed/$formId': typeof BookingFormEmbedFormIdRoute
  '/_all-pages/_authenticated/_org-required/billing': typeof AllPagesAuthenticatedOrgRequiredBillingRoute
  '/_all-pages/_authenticated/_org-required/bookings': typeof AllPagesAuthenticatedOrgRequiredBookingsRoute
  '/_all-pages/_authenticated/_org-required/choose-plan': typeof AllPagesAuthenticatedOrgRequiredChoosePlanRoute
  '/_all-pages/_authenticated/_org-required/payment-error': typeof AllPagesAuthenticatedOrgRequiredPaymentErrorRoute
  '/_all-pages/_authenticated/_org-required/settings': typeof AllPagesAuthenticatedOrgRequiredSettingsRoute
  '/_all-pages/_authenticated/_org-required/team': typeof AllPagesAuthenticatedOrgRequiredTeamRoute
  '/_all-pages/_authenticated/company-setup/company-info': typeof AllPagesAuthenticatedCompanySetupCompanyInfoRoute
  '/_all-pages/_authenticated/company-setup/employees': typeof AllPagesAuthenticatedCompanySetupEmployeesRoute
  '/_all-pages/_authenticated/company-setup/select-company': typeof AllPagesAuthenticatedCompanySetupSelectCompanyRoute
  '/_all-pages/_authenticated/superadmin/users': typeof AllPagesAuthenticatedSuperadminUsersRoute
  '/_all-pages/_authenticated/superadmin/workspaces': typeof AllPagesAuthenticatedSuperadminWorkspacesRoute
  '/_booking-form/f/$orgSlug/$formSlug': typeof BookingFormFOrgSlugFormSlugRoute
  '/_all-pages/_authenticated/_org-required/': typeof AllPagesAuthenticatedOrgRequiredIndexRoute
  '/_all-pages/_authenticated/superadmin/': typeof AllPagesAuthenticatedSuperadminIndexRoute
  '/_all-pages/_authenticated/_org-required/form/$formId/edit': typeof AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/terms'
    | '/onboarding'
    | '/profile'
    | '/select-organization'
    | '/superadmin'
    | '/admin/simpro-config'
    | '/auth/signin'
    | '/auth/update-connection'
    | '/invite/$invitationId'
    | '/oauth2/accessCode'
    | '/superadmin/signin'
    | '/embed/$formId'
    | '/billing'
    | '/bookings'
    | '/choose-plan'
    | '/payment-error'
    | '/settings'
    | '/team'
    | '/company-setup/company-info'
    | '/company-setup/employees'
    | '/company-setup/select-company'
    | '/superadmin/users'
    | '/superadmin/workspaces'
    | '/f/$orgSlug/$formSlug'
    | '/'
    | '/superadmin/'
    | '/form/$formId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/terms'
    | '/onboarding'
    | '/profile'
    | '/select-organization'
    | '/admin/simpro-config'
    | '/auth/signin'
    | '/auth/update-connection'
    | '/invite/$invitationId'
    | '/oauth2/accessCode'
    | '/superadmin/signin'
    | '/embed/$formId'
    | '/billing'
    | '/bookings'
    | '/choose-plan'
    | '/payment-error'
    | '/settings'
    | '/team'
    | '/company-setup/company-info'
    | '/company-setup/employees'
    | '/company-setup/select-company'
    | '/superadmin/users'
    | '/superadmin/workspaces'
    | '/f/$orgSlug/$formSlug'
    | '/'
    | '/superadmin'
    | '/form/$formId/edit'
  id:
    | '__root__'
    | '/_all-pages'
    | '/_booking-form'
    | '/_all-pages/_authenticated'
    | '/_all-pages/terms'
    | '/_all-pages/_authenticated/onboarding'
    | '/_all-pages/_authenticated/profile'
    | '/_all-pages/_authenticated/select-organization'
    | '/_all-pages/_authenticated/superadmin'
    | '/_all-pages/admin/simpro-config'
    | '/_all-pages/auth/signin'
    | '/_all-pages/auth/update-connection'
    | '/_all-pages/invite/$invitationId'
    | '/_all-pages/oauth2/accessCode'
    | '/_all-pages/superadmin/signin'
    | '/_booking-form/embed/$formId'
    | '/_all-pages/_authenticated/_org-required/billing'
    | '/_all-pages/_authenticated/_org-required/bookings'
    | '/_all-pages/_authenticated/_org-required/choose-plan'
    | '/_all-pages/_authenticated/_org-required/payment-error'
    | '/_all-pages/_authenticated/_org-required/settings'
    | '/_all-pages/_authenticated/_org-required/team'
    | '/_all-pages/_authenticated/company-setup/company-info'
    | '/_all-pages/_authenticated/company-setup/employees'
    | '/_all-pages/_authenticated/company-setup/select-company'
    | '/_all-pages/_authenticated/superadmin/users'
    | '/_all-pages/_authenticated/superadmin/workspaces'
    | '/_booking-form/f/$orgSlug/$formSlug'
    | '/_all-pages/_authenticated/_org-required/'
    | '/_all-pages/_authenticated/superadmin/'
    | '/_all-pages/_authenticated/_org-required/form/$formId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AllPagesRoute: typeof AllPagesRouteWithChildren
  BookingFormRoute: typeof BookingFormRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/health': typeof ApiHealthServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/bookings/submit': typeof ApiBookingsSubmitServerRoute
  '/api/debug/service-employees': typeof ApiDebugServiceEmployeesServerRoute
  '/api/debug/simpro-employees': typeof ApiDebugSimproEmployeesServerRoute
  '/api/employees/sync': typeof ApiEmployeesSyncServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/employees': typeof ApiEmployeesIndexServerRoute
  '/api/services/$serviceId/employees': typeof ApiServicesServiceIdEmployeesServerRoute
  '/api/public/services/$serviceId/availability': typeof ApiPublicServicesServiceIdAvailabilityServerRoute
}
export interface FileServerRoutesByTo {
  '/api/health': typeof ApiHealthServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/bookings/submit': typeof ApiBookingsSubmitServerRoute
  '/api/debug/service-employees': typeof ApiDebugServiceEmployeesServerRoute
  '/api/debug/simpro-employees': typeof ApiDebugSimproEmployeesServerRoute
  '/api/employees/sync': typeof ApiEmployeesSyncServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/employees': typeof ApiEmployeesIndexServerRoute
  '/api/services/$serviceId/employees': typeof ApiServicesServiceIdEmployeesServerRoute
  '/api/public/services/$serviceId/availability': typeof ApiPublicServicesServiceIdAvailabilityServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/health': typeof ApiHealthServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/bookings/submit': typeof ApiBookingsSubmitServerRoute
  '/api/debug/service-employees': typeof ApiDebugServiceEmployeesServerRoute
  '/api/debug/simpro-employees': typeof ApiDebugSimproEmployeesServerRoute
  '/api/employees/sync': typeof ApiEmployeesSyncServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/employees/': typeof ApiEmployeesIndexServerRoute
  '/api/services/$serviceId/employees': typeof ApiServicesServiceIdEmployeesServerRoute
  '/api/public/services/$serviceId/availability': typeof ApiPublicServicesServiceIdAvailabilityServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/health'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/bookings/submit'
    | '/api/debug/service-employees'
    | '/api/debug/simpro-employees'
    | '/api/employees/sync'
    | '/api/stripe/webhook'
    | '/api/employees'
    | '/api/services/$serviceId/employees'
    | '/api/public/services/$serviceId/availability'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/health'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/bookings/submit'
    | '/api/debug/service-employees'
    | '/api/debug/simpro-employees'
    | '/api/employees/sync'
    | '/api/stripe/webhook'
    | '/api/employees'
    | '/api/services/$serviceId/employees'
    | '/api/public/services/$serviceId/availability'
  id:
    | '__root__'
    | '/api/health'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/bookings/submit'
    | '/api/debug/service-employees'
    | '/api/debug/simpro-employees'
    | '/api/employees/sync'
    | '/api/stripe/webhook'
    | '/api/employees/'
    | '/api/services/$serviceId/employees'
    | '/api/public/services/$serviceId/availability'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiHealthServerRoute: typeof ApiHealthServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiAvatarsSplatServerRoute: typeof ApiAvatarsSplatServerRoute
  ApiAvatarsDeleteServerRoute: typeof ApiAvatarsDeleteServerRoute
  ApiAvatarsUploadServerRoute: typeof ApiAvatarsUploadServerRoute
  ApiBookingsSubmitServerRoute: typeof ApiBookingsSubmitServerRoute
  ApiDebugServiceEmployeesServerRoute: typeof ApiDebugServiceEmployeesServerRoute
  ApiDebugSimproEmployeesServerRoute: typeof ApiDebugSimproEmployeesServerRoute
  ApiEmployeesSyncServerRoute: typeof ApiEmployeesSyncServerRoute
  ApiStripeWebhookServerRoute: typeof ApiStripeWebhookServerRoute
  ApiEmployeesIndexServerRoute: typeof ApiEmployeesIndexServerRoute
  ApiServicesServiceIdEmployeesServerRoute: typeof ApiServicesServiceIdEmployeesServerRoute
  ApiPublicServicesServiceIdAvailabilityServerRoute: typeof ApiPublicServicesServiceIdAvailabilityServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_booking-form': {
      id: '/_booking-form'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BookingFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_all-pages': {
      id: '/_all-pages'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AllPagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_all-pages/terms': {
      id: '/_all-pages/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof AllPagesTermsRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/_authenticated': {
      id: '/_all-pages/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AllPagesAuthenticatedRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_booking-form/embed/$formId': {
      id: '/_booking-form/embed/$formId'
      path: '/embed/$formId'
      fullPath: '/embed/$formId'
      preLoaderRoute: typeof BookingFormEmbedFormIdRouteImport
      parentRoute: typeof BookingFormRoute
    }
    '/_all-pages/superadmin/signin': {
      id: '/_all-pages/superadmin/signin'
      path: '/superadmin/signin'
      fullPath: '/superadmin/signin'
      preLoaderRoute: typeof AllPagesSuperadminSigninRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/oauth2/accessCode': {
      id: '/_all-pages/oauth2/accessCode'
      path: '/oauth2/accessCode'
      fullPath: '/oauth2/accessCode'
      preLoaderRoute: typeof AllPagesOauth2AccessCodeRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/invite/$invitationId': {
      id: '/_all-pages/invite/$invitationId'
      path: '/invite/$invitationId'
      fullPath: '/invite/$invitationId'
      preLoaderRoute: typeof AllPagesInviteInvitationIdRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/auth/update-connection': {
      id: '/_all-pages/auth/update-connection'
      path: '/auth/update-connection'
      fullPath: '/auth/update-connection'
      preLoaderRoute: typeof AllPagesAuthUpdateConnectionRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/auth/signin': {
      id: '/_all-pages/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AllPagesAuthSigninRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/admin/simpro-config': {
      id: '/_all-pages/admin/simpro-config'
      path: '/admin/simpro-config'
      fullPath: '/admin/simpro-config'
      preLoaderRoute: typeof AllPagesAdminSimproConfigRouteImport
      parentRoute: typeof AllPagesRoute
    }
    '/_all-pages/_authenticated/superadmin': {
      id: '/_all-pages/_authenticated/superadmin'
      path: '/superadmin'
      fullPath: '/superadmin'
      preLoaderRoute: typeof AllPagesAuthenticatedSuperadminRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/select-organization': {
      id: '/_all-pages/_authenticated/select-organization'
      path: '/select-organization'
      fullPath: '/select-organization'
      preLoaderRoute: typeof AllPagesAuthenticatedSelectOrganizationRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/profile': {
      id: '/_all-pages/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AllPagesAuthenticatedProfileRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/onboarding': {
      id: '/_all-pages/_authenticated/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AllPagesAuthenticatedOnboardingRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/superadmin/': {
      id: '/_all-pages/_authenticated/superadmin/'
      path: '/'
      fullPath: '/superadmin/'
      preLoaderRoute: typeof AllPagesAuthenticatedSuperadminIndexRouteImport
      parentRoute: typeof AllPagesAuthenticatedSuperadminRoute
    }
    '/_all-pages/_authenticated/_org-required/': {
      id: '/_all-pages/_authenticated/_org-required/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredIndexRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_booking-form/f/$orgSlug/$formSlug': {
      id: '/_booking-form/f/$orgSlug/$formSlug'
      path: '/f/$orgSlug/$formSlug'
      fullPath: '/f/$orgSlug/$formSlug'
      preLoaderRoute: typeof BookingFormFOrgSlugFormSlugRouteImport
      parentRoute: typeof BookingFormRoute
    }
    '/_all-pages/_authenticated/superadmin/workspaces': {
      id: '/_all-pages/_authenticated/superadmin/workspaces'
      path: '/workspaces'
      fullPath: '/superadmin/workspaces'
      preLoaderRoute: typeof AllPagesAuthenticatedSuperadminWorkspacesRouteImport
      parentRoute: typeof AllPagesAuthenticatedSuperadminRoute
    }
    '/_all-pages/_authenticated/superadmin/users': {
      id: '/_all-pages/_authenticated/superadmin/users'
      path: '/users'
      fullPath: '/superadmin/users'
      preLoaderRoute: typeof AllPagesAuthenticatedSuperadminUsersRouteImport
      parentRoute: typeof AllPagesAuthenticatedSuperadminRoute
    }
    '/_all-pages/_authenticated/company-setup/select-company': {
      id: '/_all-pages/_authenticated/company-setup/select-company'
      path: '/company-setup/select-company'
      fullPath: '/company-setup/select-company'
      preLoaderRoute: typeof AllPagesAuthenticatedCompanySetupSelectCompanyRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/company-setup/employees': {
      id: '/_all-pages/_authenticated/company-setup/employees'
      path: '/company-setup/employees'
      fullPath: '/company-setup/employees'
      preLoaderRoute: typeof AllPagesAuthenticatedCompanySetupEmployeesRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/company-setup/company-info': {
      id: '/_all-pages/_authenticated/company-setup/company-info'
      path: '/company-setup/company-info'
      fullPath: '/company-setup/company-info'
      preLoaderRoute: typeof AllPagesAuthenticatedCompanySetupCompanyInfoRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/team': {
      id: '/_all-pages/_authenticated/_org-required/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredTeamRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/settings': {
      id: '/_all-pages/_authenticated/_org-required/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredSettingsRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/payment-error': {
      id: '/_all-pages/_authenticated/_org-required/payment-error'
      path: '/payment-error'
      fullPath: '/payment-error'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredPaymentErrorRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/choose-plan': {
      id: '/_all-pages/_authenticated/_org-required/choose-plan'
      path: '/choose-plan'
      fullPath: '/choose-plan'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredChoosePlanRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/bookings': {
      id: '/_all-pages/_authenticated/_org-required/bookings'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredBookingsRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/billing': {
      id: '/_all-pages/_authenticated/_org-required/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredBillingRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
    '/_all-pages/_authenticated/_org-required/form/$formId/edit': {
      id: '/_all-pages/_authenticated/_org-required/form/$formId/edit'
      path: '/form/$formId/edit'
      fullPath: '/form/$formId/edit'
      preLoaderRoute: typeof AllPagesAuthenticatedOrgRequiredFormFormIdEditRouteImport
      parentRoute: typeof AllPagesAuthenticatedRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/health': {
      id: '/api/health'
      path: '/api/health'
      fullPath: '/api/health'
      preLoaderRoute: typeof ApiHealthServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/employees/': {
      id: '/api/employees/'
      path: '/api/employees'
      fullPath: '/api/employees'
      preLoaderRoute: typeof ApiEmployeesIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/stripe/webhook': {
      id: '/api/stripe/webhook'
      path: '/api/stripe/webhook'
      fullPath: '/api/stripe/webhook'
      preLoaderRoute: typeof ApiStripeWebhookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/employees/sync': {
      id: '/api/employees/sync'
      path: '/api/employees/sync'
      fullPath: '/api/employees/sync'
      preLoaderRoute: typeof ApiEmployeesSyncServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/debug/simpro-employees': {
      id: '/api/debug/simpro-employees'
      path: '/api/debug/simpro-employees'
      fullPath: '/api/debug/simpro-employees'
      preLoaderRoute: typeof ApiDebugSimproEmployeesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/debug/service-employees': {
      id: '/api/debug/service-employees'
      path: '/api/debug/service-employees'
      fullPath: '/api/debug/service-employees'
      preLoaderRoute: typeof ApiDebugServiceEmployeesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/bookings/submit': {
      id: '/api/bookings/submit'
      path: '/api/bookings/submit'
      fullPath: '/api/bookings/submit'
      preLoaderRoute: typeof ApiBookingsSubmitServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/upload': {
      id: '/api/avatars/upload'
      path: '/api/avatars/upload'
      fullPath: '/api/avatars/upload'
      preLoaderRoute: typeof ApiAvatarsUploadServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/delete': {
      id: '/api/avatars/delete'
      path: '/api/avatars/delete'
      fullPath: '/api/avatars/delete'
      preLoaderRoute: typeof ApiAvatarsDeleteServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/$': {
      id: '/api/avatars/$'
      path: '/api/avatars/$'
      fullPath: '/api/avatars/$'
      preLoaderRoute: typeof ApiAvatarsSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/services/$serviceId/employees': {
      id: '/api/services/$serviceId/employees'
      path: '/api/services/$serviceId/employees'
      fullPath: '/api/services/$serviceId/employees'
      preLoaderRoute: typeof ApiServicesServiceIdEmployeesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/public/services/$serviceId/availability': {
      id: '/api/public/services/$serviceId/availability'
      path: '/api/public/services/$serviceId/availability'
      fullPath: '/api/public/services/$serviceId/availability'
      preLoaderRoute: typeof ApiPublicServicesServiceIdAvailabilityServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AllPagesAuthenticatedSuperadminRouteChildren {
  AllPagesAuthenticatedSuperadminUsersRoute: typeof AllPagesAuthenticatedSuperadminUsersRoute
  AllPagesAuthenticatedSuperadminWorkspacesRoute: typeof AllPagesAuthenticatedSuperadminWorkspacesRoute
  AllPagesAuthenticatedSuperadminIndexRoute: typeof AllPagesAuthenticatedSuperadminIndexRoute
}

const AllPagesAuthenticatedSuperadminRouteChildren: AllPagesAuthenticatedSuperadminRouteChildren =
  {
    AllPagesAuthenticatedSuperadminUsersRoute:
      AllPagesAuthenticatedSuperadminUsersRoute,
    AllPagesAuthenticatedSuperadminWorkspacesRoute:
      AllPagesAuthenticatedSuperadminWorkspacesRoute,
    AllPagesAuthenticatedSuperadminIndexRoute:
      AllPagesAuthenticatedSuperadminIndexRoute,
  }

const AllPagesAuthenticatedSuperadminRouteWithChildren =
  AllPagesAuthenticatedSuperadminRoute._addFileChildren(
    AllPagesAuthenticatedSuperadminRouteChildren,
  )

interface AllPagesAuthenticatedRouteChildren {
  AllPagesAuthenticatedOnboardingRoute: typeof AllPagesAuthenticatedOnboardingRoute
  AllPagesAuthenticatedProfileRoute: typeof AllPagesAuthenticatedProfileRoute
  AllPagesAuthenticatedSelectOrganizationRoute: typeof AllPagesAuthenticatedSelectOrganizationRoute
  AllPagesAuthenticatedSuperadminRoute: typeof AllPagesAuthenticatedSuperadminRouteWithChildren
  AllPagesAuthenticatedOrgRequiredBillingRoute: typeof AllPagesAuthenticatedOrgRequiredBillingRoute
  AllPagesAuthenticatedOrgRequiredBookingsRoute: typeof AllPagesAuthenticatedOrgRequiredBookingsRoute
  AllPagesAuthenticatedOrgRequiredChoosePlanRoute: typeof AllPagesAuthenticatedOrgRequiredChoosePlanRoute
  AllPagesAuthenticatedOrgRequiredPaymentErrorRoute: typeof AllPagesAuthenticatedOrgRequiredPaymentErrorRoute
  AllPagesAuthenticatedOrgRequiredSettingsRoute: typeof AllPagesAuthenticatedOrgRequiredSettingsRoute
  AllPagesAuthenticatedOrgRequiredTeamRoute: typeof AllPagesAuthenticatedOrgRequiredTeamRoute
  AllPagesAuthenticatedCompanySetupCompanyInfoRoute: typeof AllPagesAuthenticatedCompanySetupCompanyInfoRoute
  AllPagesAuthenticatedCompanySetupEmployeesRoute: typeof AllPagesAuthenticatedCompanySetupEmployeesRoute
  AllPagesAuthenticatedCompanySetupSelectCompanyRoute: typeof AllPagesAuthenticatedCompanySetupSelectCompanyRoute
  AllPagesAuthenticatedOrgRequiredIndexRoute: typeof AllPagesAuthenticatedOrgRequiredIndexRoute
  AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute: typeof AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute
}

const AllPagesAuthenticatedRouteChildren: AllPagesAuthenticatedRouteChildren = {
  AllPagesAuthenticatedOnboardingRoute: AllPagesAuthenticatedOnboardingRoute,
  AllPagesAuthenticatedProfileRoute: AllPagesAuthenticatedProfileRoute,
  AllPagesAuthenticatedSelectOrganizationRoute:
    AllPagesAuthenticatedSelectOrganizationRoute,
  AllPagesAuthenticatedSuperadminRoute:
    AllPagesAuthenticatedSuperadminRouteWithChildren,
  AllPagesAuthenticatedOrgRequiredBillingRoute:
    AllPagesAuthenticatedOrgRequiredBillingRoute,
  AllPagesAuthenticatedOrgRequiredBookingsRoute:
    AllPagesAuthenticatedOrgRequiredBookingsRoute,
  AllPagesAuthenticatedOrgRequiredChoosePlanRoute:
    AllPagesAuthenticatedOrgRequiredChoosePlanRoute,
  AllPagesAuthenticatedOrgRequiredPaymentErrorRoute:
    AllPagesAuthenticatedOrgRequiredPaymentErrorRoute,
  AllPagesAuthenticatedOrgRequiredSettingsRoute:
    AllPagesAuthenticatedOrgRequiredSettingsRoute,
  AllPagesAuthenticatedOrgRequiredTeamRoute:
    AllPagesAuthenticatedOrgRequiredTeamRoute,
  AllPagesAuthenticatedCompanySetupCompanyInfoRoute:
    AllPagesAuthenticatedCompanySetupCompanyInfoRoute,
  AllPagesAuthenticatedCompanySetupEmployeesRoute:
    AllPagesAuthenticatedCompanySetupEmployeesRoute,
  AllPagesAuthenticatedCompanySetupSelectCompanyRoute:
    AllPagesAuthenticatedCompanySetupSelectCompanyRoute,
  AllPagesAuthenticatedOrgRequiredIndexRoute:
    AllPagesAuthenticatedOrgRequiredIndexRoute,
  AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute:
    AllPagesAuthenticatedOrgRequiredFormFormIdEditRoute,
}

const AllPagesAuthenticatedRouteWithChildren =
  AllPagesAuthenticatedRoute._addFileChildren(
    AllPagesAuthenticatedRouteChildren,
  )

interface AllPagesRouteChildren {
  AllPagesAuthenticatedRoute: typeof AllPagesAuthenticatedRouteWithChildren
  AllPagesTermsRoute: typeof AllPagesTermsRoute
  AllPagesAdminSimproConfigRoute: typeof AllPagesAdminSimproConfigRoute
  AllPagesAuthSigninRoute: typeof AllPagesAuthSigninRoute
  AllPagesAuthUpdateConnectionRoute: typeof AllPagesAuthUpdateConnectionRoute
  AllPagesInviteInvitationIdRoute: typeof AllPagesInviteInvitationIdRoute
  AllPagesOauth2AccessCodeRoute: typeof AllPagesOauth2AccessCodeRoute
  AllPagesSuperadminSigninRoute: typeof AllPagesSuperadminSigninRoute
}

const AllPagesRouteChildren: AllPagesRouteChildren = {
  AllPagesAuthenticatedRoute: AllPagesAuthenticatedRouteWithChildren,
  AllPagesTermsRoute: AllPagesTermsRoute,
  AllPagesAdminSimproConfigRoute: AllPagesAdminSimproConfigRoute,
  AllPagesAuthSigninRoute: AllPagesAuthSigninRoute,
  AllPagesAuthUpdateConnectionRoute: AllPagesAuthUpdateConnectionRoute,
  AllPagesInviteInvitationIdRoute: AllPagesInviteInvitationIdRoute,
  AllPagesOauth2AccessCodeRoute: AllPagesOauth2AccessCodeRoute,
  AllPagesSuperadminSigninRoute: AllPagesSuperadminSigninRoute,
}

const AllPagesRouteWithChildren = AllPagesRoute._addFileChildren(
  AllPagesRouteChildren,
)

interface BookingFormRouteChildren {
  BookingFormEmbedFormIdRoute: typeof BookingFormEmbedFormIdRoute
  BookingFormFOrgSlugFormSlugRoute: typeof BookingFormFOrgSlugFormSlugRoute
}

const BookingFormRouteChildren: BookingFormRouteChildren = {
  BookingFormEmbedFormIdRoute: BookingFormEmbedFormIdRoute,
  BookingFormFOrgSlugFormSlugRoute: BookingFormFOrgSlugFormSlugRoute,
}

const BookingFormRouteWithChildren = BookingFormRoute._addFileChildren(
  BookingFormRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AllPagesRoute: AllPagesRouteWithChildren,
  BookingFormRoute: BookingFormRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiHealthServerRoute: ApiHealthServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAvatarsSplatServerRoute: ApiAvatarsSplatServerRoute,
  ApiAvatarsDeleteServerRoute: ApiAvatarsDeleteServerRoute,
  ApiAvatarsUploadServerRoute: ApiAvatarsUploadServerRoute,
  ApiBookingsSubmitServerRoute: ApiBookingsSubmitServerRoute,
  ApiDebugServiceEmployeesServerRoute: ApiDebugServiceEmployeesServerRoute,
  ApiDebugSimproEmployeesServerRoute: ApiDebugSimproEmployeesServerRoute,
  ApiEmployeesSyncServerRoute: ApiEmployeesSyncServerRoute,
  ApiStripeWebhookServerRoute: ApiStripeWebhookServerRoute,
  ApiEmployeesIndexServerRoute: ApiEmployeesIndexServerRoute,
  ApiServicesServiceIdEmployeesServerRoute:
    ApiServicesServiceIdEmployeesServerRoute,
  ApiPublicServicesServiceIdAvailabilityServerRoute:
    ApiPublicServicesServiceIdAvailabilityServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
